"use client";
import { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardHeader, CardContent } from "@/components/ui/card";
import LeverSubtasks from "@/components/dashboard/LeverSubtasks";
import { toast } from "react-hot-toast";

export default function GrowthPlanCard() {
  const [loading, setLoading] = useState(false);
  const [data, setData] = useState<any>(null);

  async function load() {
    const res = await fetch("/api/growth-plan/current");
    const json = await res.json();
    setData(json);
  }
  useEffect(() => { load(); }, []);

  async function generate() {
    setLoading(true);
    const res = await fetch("/api/growth-plan/generate", { method: "POST" });
    if (!res.ok) toast.error("Failed to generate plan"); else { toast.success("Plan generated"); await load(); }
    setLoading(false);
  }

  if (!data?.plan) {
    return (
      <Card className="rounded-2xl shadow-sm">
        <CardHeader>
          <div className="text-xl font-semibold">30â€‘Day Growth Plan</div>
          <div className="text-sm text-gray-600">No active plan yet.</div>
        </CardHeader>
        <CardContent>
          <Button onClick={generate} disabled={loading}>{loading ? "Generating..." : "Generate Plan"}</Button>
        </CardContent>
      </Card>
    );
  }

  const { plan, levers } = data;
  return (
    <Card className="rounded-2xl shadow-sm">
      <CardHeader>
        <div className="flex items-center justify-between">
          <div>
            <div className="text-xl font-semibold">30â€‘Day Plan â€¢ {plan.period_start} â†’ {plan.period_end}</div>
            <div className="text-sm text-gray-600">Autoâ€‘generated by OptimaliQ Agent</div>
          </div>
        </div>
      </CardHeader>
      <CardContent className="space-y-3">
        {levers?.map((lv: any) => (
          <div key={lv.id} className="p-3 rounded-xl border flex items-start justify-between">
            <div>
              <div className="font-medium">{lv.priority}. {lv.title}</div>
              <div className="text-sm text-gray-600">{lv.description}</div>
              <div className="text-xs mt-1 flex items-center gap-2">
                <span>Metric: {lv.success_metric} â€¢ Target: {lv.target_value} â€¢ Due:</span>
                <input
                  type="date"
                  defaultValue={lv.due_date}
                  className="border rounded px-1 py-0.5 text-xs"
                  onChange={async (e) => {
                    // clamp client-side to plan window if present
                    const date = e.target.value;
                    await fetch(`/api/growth-plan/levers/${lv.id}/progress`, { method: 'POST', body: JSON.stringify({ current_value: lv.current_value, due_date: date }) });
                  }}
                />
              </div>
              <div className="mt-2">
                <LeverSubtasks leverId={lv.id} />
              </div>
            </div>
            <div className="flex gap-2">
              <Button variant="outline" onClick={async () => {
                await fetch(`/api/growth-plan/levers/${lv.id}/progress`, { method: "POST", body: JSON.stringify({ status: "in_progress" }) });
                toast.success("Marked in progress"); load();
              }}>Start</Button>
              <Button onClick={async () => {
                await fetch(`/api/growth-plan/levers/${lv.id}/progress`, { method: "POST", body: JSON.stringify({ status: "done" }) });
                toast.success("Marked done ðŸŽ‰"); load();
              }}>Done</Button>
            </div>
          </div>
        ))}
      </CardContent>
    </Card>
  );
}


